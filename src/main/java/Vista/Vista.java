package Vista;

import Clases.*;
import Controlador.*;
import java.awt.event.ItemListener;
import javax.swing.JOptionPane;

public class Vista extends javax.swing.JFrame {

    CtPlan CtPlan;
    CtCliente CtCliente;
    CtMascota CtMascota;
    CtPago CtPago;

    /**
     * Creates new form Vista
     */
    public Vista() {
        initComponents();
        this.CtPlan = new CtPlan();
        this.CtCliente = new CtCliente();
        this.CtMascota = new CtMascota();
        this.CtPago = new CtPago();
        String[] clientes = CtMascota.retornarNombresClientes();
        for (int i = 0; i < clientes.length; i++) {
            idClienteMascota.addItem(clientes[i]);

        }
        String[] mascotas = CtPago.retornarMascotas();
        for (int i = 0; i < mascotas.length; i++) {
            mascotaInfo.addItem(mascotas[i]);

        }

        String[] planes = CtPago.retornarPlanes();
        for (int i = 0; i < planes.length; i++) {
            planInfo.addItem(planes[i]);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel15 = new javax.swing.JLabel();
        pestañaMascota = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        codigoPlan = new javax.swing.JTextField();
        nombrePlan = new javax.swing.JComboBox<>();
        precioPlan = new javax.swing.JTextField();
        btnCrearPlan = new javax.swing.JButton();
        btnConsultarPlan = new javax.swing.JButton();
        btnModificarPlan = new javax.swing.JButton();
        btnBorrarPlan = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        botonListarPlanes = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        identificacionCliente = new javax.swing.JTextField();
        nombresCliente = new javax.swing.JTextField();
        apellidosCliente = new javax.swing.JTextField();
        direccionCliente = new javax.swing.JTextField();
        telefonoCliente = new javax.swing.JTextField();
        btnCrearCliente = new javax.swing.JButton();
        btnConsultarCliente = new javax.swing.JButton();
        btnModificarCliente = new javax.swing.JButton();
        btnBorrarCliente = new javax.swing.JButton();
        btnLimpiarCliente = new javax.swing.JButton();
        botonListarClientes = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnCrearMascota = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btnConsultarMascota = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        btnModificarMascota = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        btnBorrarMascota = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnLimpiarCliente1 = new javax.swing.JButton();
        nombreMascota = new javax.swing.JTextField();
        edadMascota = new javax.swing.JTextField();
        pesoMascota = new javax.swing.JTextField();
        idClienteMascota = new javax.swing.JComboBox<>();
        especieMascota = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        codigoMascota = new javax.swing.JTextField();
        botonListarMascotas = new javax.swing.JButton();
        botonReporteMascotas = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        codigoPago = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        nCuotasPago = new javax.swing.JTextField();
        crearPago = new javax.swing.JButton();
        consultarPago = new javax.swing.JButton();
        modificarPago = new javax.swing.JButton();
        BorrarPago = new javax.swing.JButton();
        LimpiarPago = new javax.swing.JButton();
        fechaPago = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        mascotaInfo = new javax.swing.JComboBox<>();
        planInfo = new javax.swing.JComboBox<>();
        botonListarPagos = new javax.swing.JButton();

        jLabel15.setText("jLabel15");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        pestañaMascota.setBackground(new java.awt.Color(204, 204, 255));
        pestañaMascota.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pestañaMascota.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                pestañaMascotaHierarchyChanged(evt);
            }
        });
        pestañaMascota.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pestañaMascotaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                pestañaMascotaFocusLost(evt);
            }
        });
        pestañaMascota.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                pestañaMascotaInputMethodTextChanged(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Código:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 30, -1, -1));

        jLabel2.setText("Nombre:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 71, -1, -1));

        jLabel3.setText("Precio:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 112, -1, -1));

        codigoPlan.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(codigoPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 28, 82, -1));

        nombrePlan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bienestar", "Élite", "Diamante" }));
        nombrePlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombrePlanActionPerformed(evt);
            }
        });
        jPanel1.add(nombrePlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 66, -1, -1));

        precioPlan.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(precioPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 110, 82, -1));

        btnCrearPlan.setBackground(new java.awt.Color(153, 153, 255));
        btnCrearPlan.setText("Crear");
        btnCrearPlan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCrearPlan.setMaximumSize(new java.awt.Dimension(65, 25));
        btnCrearPlan.setMinimumSize(new java.awt.Dimension(65, 25));
        btnCrearPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearPlanActionPerformed(evt);
            }
        });
        jPanel1.add(btnCrearPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        btnConsultarPlan.setBackground(new java.awt.Color(153, 153, 255));
        btnConsultarPlan.setText("Consultar");
        btnConsultarPlan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConsultarPlan.setMaximumSize(new java.awt.Dimension(65, 25));
        btnConsultarPlan.setMinimumSize(new java.awt.Dimension(65, 25));
        btnConsultarPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarPlanActionPerformed(evt);
            }
        });
        jPanel1.add(btnConsultarPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, -1, -1));

        btnModificarPlan.setBackground(new java.awt.Color(153, 153, 255));
        btnModificarPlan.setText("Modificar");
        btnModificarPlan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificarPlan.setMaximumSize(new java.awt.Dimension(65, 25));
        btnModificarPlan.setMinimumSize(new java.awt.Dimension(65, 25));
        btnModificarPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPlanActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificarPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, -1, -1));

        btnBorrarPlan.setBackground(new java.awt.Color(153, 153, 255));
        btnBorrarPlan.setText("Borrar");
        btnBorrarPlan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrarPlan.setMaximumSize(new java.awt.Dimension(65, 25));
        btnBorrarPlan.setMinimumSize(new java.awt.Dimension(65, 25));
        btnBorrarPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarPlanActionPerformed(evt);
            }
        });
        jPanel1.add(btnBorrarPlan, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, -1, -1));

        btnLimpiar.setBackground(new java.awt.Color(153, 153, 255));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.setMaximumSize(new java.awt.Dimension(65, 25));
        btnLimpiar.setMinimumSize(new java.awt.Dimension(65, 25));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, -1, -1));

        botonListarPlanes.setBackground(new java.awt.Color(102, 255, 102));
        botonListarPlanes.setText("Listar Planes");
        botonListarPlanes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonListarPlanes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListarPlanesActionPerformed(evt);
            }
        });
        jPanel1.add(botonListarPlanes, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 120, 100));

        pestañaMascota.addTab("Plan", jPanel1);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("Identificación:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 21, -1, -1));

        jLabel5.setText("Nombres:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 59, -1, -1));

        jLabel6.setText("Apellidos:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 97, -1, -1));

        jLabel7.setText("Dirección:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 135, -1, -1));

        jLabel8.setText("Teléfono:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 173, -1, -1));

        identificacionCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(identificacionCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 19, 224, -1));

        nombresCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(nombresCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 57, 224, -1));

        apellidosCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(apellidosCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 95, 224, -1));

        direccionCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(direccionCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 133, 224, -1));

        telefonoCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        telefonoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefonoClienteActionPerformed(evt);
            }
        });
        jPanel2.add(telefonoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 171, 224, -1));

        btnCrearCliente.setBackground(new java.awt.Color(153, 153, 255));
        btnCrearCliente.setText("Crear");
        btnCrearCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCrearCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearClienteActionPerformed(evt);
            }
        });
        jPanel2.add(btnCrearCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        btnConsultarCliente.setBackground(new java.awt.Color(153, 153, 255));
        btnConsultarCliente.setText("Consultar");
        btnConsultarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConsultarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarClienteActionPerformed(evt);
            }
        });
        jPanel2.add(btnConsultarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, -1, -1));

        btnModificarCliente.setBackground(new java.awt.Color(153, 153, 255));
        btnModificarCliente.setText("Modificar");
        btnModificarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarClienteActionPerformed(evt);
            }
        });
        jPanel2.add(btnModificarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, -1, -1));

        btnBorrarCliente.setBackground(new java.awt.Color(153, 153, 255));
        btnBorrarCliente.setText("Borrar");
        btnBorrarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarClienteActionPerformed(evt);
            }
        });
        jPanel2.add(btnBorrarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, -1, -1));

        btnLimpiarCliente.setBackground(new java.awt.Color(153, 153, 255));
        btnLimpiarCliente.setText("Limpiar");
        btnLimpiarCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarClienteActionPerformed(evt);
            }
        });
        jPanel2.add(btnLimpiarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 230, -1, -1));

        botonListarClientes.setBackground(new java.awt.Color(102, 255, 102));
        botonListarClientes.setText("Listar Clientes");
        botonListarClientes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonListarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListarClientesActionPerformed(evt);
            }
        });
        jPanel2.add(botonListarClientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 18, -1, 170));

        pestañaMascota.addTab("Cliente", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCrearMascota.setBackground(new java.awt.Color(153, 153, 255));
        btnCrearMascota.setText("Crear");
        btnCrearMascota.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCrearMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearMascotaActionPerformed(evt);
            }
        });
        jPanel3.add(btnCrearMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 260, -1, -1));

        jLabel9.setText("Cliente:");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 25, -1, -1));

        btnConsultarMascota.setBackground(new java.awt.Color(153, 153, 255));
        btnConsultarMascota.setText("Consultar");
        btnConsultarMascota.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConsultarMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarMascotaActionPerformed(evt);
            }
        });
        jPanel3.add(btnConsultarMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, -1, -1));

        jLabel10.setText("Nombre mascota:");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 104, -1, -1));

        btnModificarMascota.setBackground(new java.awt.Color(153, 153, 255));
        btnModificarMascota.setText("Modificar");
        btnModificarMascota.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificarMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarMascotaActionPerformed(evt);
            }
        });
        jPanel3.add(btnModificarMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 260, -1, -1));

        jLabel11.setText("Edad mascota:");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 142, -1, -1));

        btnBorrarMascota.setBackground(new java.awt.Color(153, 153, 255));
        btnBorrarMascota.setText("Borrar");
        btnBorrarMascota.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrarMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarMascotaActionPerformed(evt);
            }
        });
        jPanel3.add(btnBorrarMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 260, -1, -1));

        jLabel12.setText("Peso mascota:");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 180, -1, -1));

        jLabel13.setText("Especie mascota:");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 221, -1, -1));

        btnLimpiarCliente1.setBackground(new java.awt.Color(153, 153, 255));
        btnLimpiarCliente1.setText("Limpiar");
        btnLimpiarCliente1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiarCliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCliente1ActionPerformed(evt);
            }
        });
        jPanel3.add(btnLimpiarCliente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, -1, -1));

        nombreMascota.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.add(nombreMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 102, 224, -1));

        edadMascota.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.add(edadMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 140, 224, -1));

        pesoMascota.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.add(pesoMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 178, 224, -1));

        idClienteMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idClienteMascotaActionPerformed(evt);
            }
        });
        jPanel3.add(idClienteMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 19, 224, -1));

        especieMascota.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Perro", "Gato", "Pez", "Hamster", "Loro", "Reptil" }));
        jPanel3.add(especieMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 216, 224, -1));

        jLabel14.setText("Código:");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 67, 43, -1));

        codigoMascota.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.add(codigoMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 65, 224, -1));

        botonListarMascotas.setBackground(new java.awt.Color(102, 255, 102));
        botonListarMascotas.setText("Listar Mascotas");
        botonListarMascotas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonListarMascotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListarMascotasActionPerformed(evt);
            }
        });
        jPanel3.add(botonListarMascotas, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, 160, 100));

        botonReporteMascotas.setBackground(new java.awt.Color(255, 204, 51));
        botonReporteMascotas.setText("Reporte de mascotas");
        botonReporteMascotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonReporteMascotasActionPerformed(evt);
            }
        });
        jPanel3.add(botonReporteMascotas, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, 160, 100));

        pestañaMascota.addTab("Mascota", jPanel3);

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setText("Código:");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 30, -1, -1));

        codigoPago.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.add(codigoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 28, 232, -1));

        jLabel17.setText("Fecha:");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 69, -1, -1));

        jLabel18.setText("Número de cuotas:");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 108, -1, -1));

        nCuotasPago.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.add(nCuotasPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 106, 232, -1));

        crearPago.setBackground(new java.awt.Color(153, 153, 255));
        crearPago.setText("Crear");
        crearPago.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        crearPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearPagoActionPerformed(evt);
            }
        });
        jPanel4.add(crearPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        consultarPago.setBackground(new java.awt.Color(153, 153, 255));
        consultarPago.setText("Consultar");
        consultarPago.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        consultarPago.setMaximumSize(new java.awt.Dimension(61, 25));
        consultarPago.setMinimumSize(new java.awt.Dimension(61, 25));
        consultarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarPagoActionPerformed(evt);
            }
        });
        jPanel4.add(consultarPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 90, -1));

        modificarPago.setBackground(new java.awt.Color(153, 153, 255));
        modificarPago.setText("Modificar");
        modificarPago.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        modificarPago.setMaximumSize(new java.awt.Dimension(61, 25));
        modificarPago.setMinimumSize(new java.awt.Dimension(61, 25));
        modificarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarPagoActionPerformed(evt);
            }
        });
        jPanel4.add(modificarPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, -1, -1));

        BorrarPago.setBackground(new java.awt.Color(153, 153, 255));
        BorrarPago.setText("Borrar");
        BorrarPago.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BorrarPago.setMaximumSize(new java.awt.Dimension(61, 25));
        BorrarPago.setMinimumSize(new java.awt.Dimension(61, 25));
        BorrarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarPagoActionPerformed(evt);
            }
        });
        jPanel4.add(BorrarPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, -1, -1));

        LimpiarPago.setBackground(new java.awt.Color(153, 153, 255));
        LimpiarPago.setText("Limpiar");
        LimpiarPago.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LimpiarPago.setMaximumSize(new java.awt.Dimension(61, 25));
        LimpiarPago.setMinimumSize(new java.awt.Dimension(61, 25));
        LimpiarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarPagoActionPerformed(evt);
            }
        });
        jPanel4.add(LimpiarPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, -1, -1));
        jPanel4.add(fechaPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 66, 232, -1));

        jLabel19.setText("Mascota:");
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 139, -1, -1));

        jLabel20.setText("Plan:");
        jPanel4.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 177, -1, -1));

        jPanel4.add(mascotaInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 139, 232, 23));

        jPanel4.add(planInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 173, 232, 24));

        botonListarPagos.setBackground(new java.awt.Color(102, 255, 102));
        botonListarPagos.setText("Listar Pagos");
        botonListarPagos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        botonListarPagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonListarPagosActionPerformed(evt);
            }
        });
        jPanel4.add(botonListarPagos, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, 100, 170));

        pestañaMascota.addTab("Pago", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pestañaMascota, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pestañaMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void telefonoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefonoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telefonoClienteActionPerformed

    private void btnCrearPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearPlanActionPerformed
        // TODO add your handling code here:
        String codigo = codigoPlan.getText();
        String nombre = nombrePlan.getSelectedItem().toString();
        int precio = Integer.parseInt(precioPlan.getText());
        Plan p = new Plan(codigo, nombre, precio);

        if (this.CtPlan.crearPlan(p)) {
            JOptionPane.showMessageDialog(this, "El plan fue agregado en la base de datos");
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo agregar el registro a la base de datos");
        }
        limpiarCampos(1);
    }//GEN-LAST:event_btnCrearPlanActionPerformed

    private void btnConsultarPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarPlanActionPerformed
        // TODO add your handling code here:
        String codigo = codigoPlan.getText();
        Plan p = CtPlan.buscarPlan(codigo);
        if (p == null) {
            JOptionPane.showMessageDialog(this, "El código de ese plan no fue encontrado");
            limpiarCampos(1);
        } else {
            if (p.getNombre().equals("Bienestar")) {
                nombrePlan.setSelectedIndex(0);
            } else {
                if (p.getNombre().equals("Élite")) {
                    nombrePlan.setSelectedIndex(1);
                } else {
                    nombrePlan.setSelectedIndex(2);
                }
            }
            precioPlan.setText(String.valueOf(p.getPrecio()));
        }
    }//GEN-LAST:event_btnConsultarPlanActionPerformed

    private void btnModificarPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPlanActionPerformed
        // TODO add your handling code here:
        String codigo = codigoPlan.getText();
        String nombre = nombrePlan.getSelectedItem().toString();
        int precio = Integer.parseInt(precioPlan.getText());
        Plan p = new Plan(codigo, nombre, precio);
        try {
            boolean respuesta = CtPlan.actualizarPlan(p);
            if (respuesta) {
                JOptionPane.showMessageDialog(this, "Registro actualizado correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Registro no actualizado");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Debe buscar el registro para actualizar");
        }
        limpiarCampos(1);
    }//GEN-LAST:event_btnModificarPlanActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        limpiarCampos(1);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBorrarPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarPlanActionPerformed
        // TODO add your handling code here:
        String codigo = codigoPlan.getText();
        String nombre = nombrePlan.getSelectedItem().toString();
        int precio = Integer.parseInt(precioPlan.getText());
        Plan p = new Plan(codigo, nombre, precio);
        try {
            boolean respuesta = CtPlan.borrarPlan(p);
            if (respuesta) {
                JOptionPane.showMessageDialog(this, "Registro borrado correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Registro no borrado");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No se pudo borrar");
        }
        limpiarCampos(1);
    }//GEN-LAST:event_btnBorrarPlanActionPerformed

    private void btnCrearClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearClienteActionPerformed
        // TODO add your handling code here:
        idClienteMascota.removeAllItems();

        String identificacion = identificacionCliente.getText();
        String nombre = nombresCliente.getText();
        String apellido = apellidosCliente.getText();
        String direccion = direccionCliente.getText();
        String telefono = telefonoCliente.getText();
        Cliente c = new Cliente(identificacion, nombre, apellido, direccion, telefono);

        if (this.CtCliente.crearCliente(c)) {
            JOptionPane.showMessageDialog(this, "El cliente fue agregado en la base de datos");
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo agregar el registro a la base de datos");
        }
        limpiarCampos(2);
        String[] clientes = CtMascota.retornarNombresClientes();
        for (int i = 0; i < clientes.length; i++) {
            idClienteMascota.addItem(clientes[i]);

        }

    }//GEN-LAST:event_btnCrearClienteActionPerformed

    private void btnLimpiarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarClienteActionPerformed
        // TODO add your handling code here:
        limpiarCampos(2);
    }//GEN-LAST:event_btnLimpiarClienteActionPerformed

    private void btnConsultarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarClienteActionPerformed
        // TODO add your handling code here:
        String identificacion = identificacionCliente.getText();
        Cliente c = CtCliente.buscarCliente(identificacion);
        if (c == null) {
            JOptionPane.showMessageDialog(this, "El código de ese plan no fue encontrado");
            limpiarCampos(1);
        } else {
            identificacionCliente.setText(String.valueOf(c.getIdCliente()));
            nombresCliente.setText(String.valueOf(c.getNombres()));
            apellidosCliente.setText(String.valueOf(c.getApellidos()));
            direccionCliente.setText(String.valueOf(c.getDireccion()));
            telefonoCliente.setText(String.valueOf(c.getTelefono()));
        }
    }//GEN-LAST:event_btnConsultarClienteActionPerformed

    private void btnBorrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarClienteActionPerformed
        // TODO add your handling code here:
        String identificacion = identificacionCliente.getText();
        Cliente c = new Cliente(identificacion, "", "", "", "");
        try {
            boolean respuesta = CtCliente.borrarCliente(c);
            if (respuesta) {
                JOptionPane.showMessageDialog(this, "Registro borrado correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Registro no borrado");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No se pudo borrar");
        }
        limpiarCampos(2);
    }//GEN-LAST:event_btnBorrarClienteActionPerformed

    private void btnModificarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarClienteActionPerformed
        // TODO add your handling code here:
        String identificacion = identificacionCliente.getText();
        String nombre = nombresCliente.getText();
        String apellido = apellidosCliente.getText();
        String direccion = direccionCliente.getText();
        String telefono = telefonoCliente.getText();
        Cliente c = new Cliente(identificacion, nombre, apellido, direccion, telefono);
        try {
            boolean respuesta = CtCliente.actualizarCliente(c);
            if (respuesta) {
                JOptionPane.showMessageDialog(this, "Registro actualizado correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Registro no actualizado");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Debe buscar el registro para actualizar");
        }
        limpiarCampos(2);
    }//GEN-LAST:event_btnModificarClienteActionPerformed
    private int retornaId(String id) {
        int indice = id.indexOf(' ', 0);
        int idCliente = Integer.parseInt((String) id.subSequence(0, indice));
        return idCliente;
    }
    private void btnCrearMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearMascotaActionPerformed
        //String cadena_idCliente = (String) idClienteMascota.getSelectedItem();
        //int indice = cadena_idCliente.indexOf(' ', 0);
        int idCliente = retornaId((String) idClienteMascota.getSelectedItem());
        String codigo = codigoMascota.getText();
        String nombre = nombreMascota.getText();
        String edad = edadMascota.getText();
        String peso = pesoMascota.getText();
        String especie = (String) especieMascota.getSelectedItem();

        Mascota m = new Mascota(idCliente, codigo, nombre, edad, peso, especie);

        if (this.CtMascota.crearMascota(m)) {
            JOptionPane.showMessageDialog(this, "La mascota fue agregada en la base de datos");
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo agregar el registro a la base de datos");
        }
        limpiarCampos(3);
    }//GEN-LAST:event_btnCrearMascotaActionPerformed

    private void btnConsultarMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarMascotaActionPerformed

        String codigo = codigoMascota.getText();
        Mascota m = CtMascota.buscarMascota(codigo);
        if (m == null) {
            JOptionPane.showMessageDialog(this, "El código esta mascota no fue encontrado");
            limpiarCampos(1);
        } else {
            int size = idClienteMascota.getItemCount();
            for (int i = 0; i < size; i++) {
                String item = idClienteMascota.getItemAt(i);
                int id = retornaId((String) item);
                if (id == m.getIdCliente()) {
                    idClienteMascota.setSelectedIndex(i);
                }
            }
            nombreMascota.setText(String.valueOf(m.getNombre()));
            edadMascota.setText(String.valueOf(m.getEdad()));
            especieMascota.setSelectedItem(String.valueOf(m.getEspecie()));
            pesoMascota.setText(String.valueOf(m.getPeso()));
        }

    }//GEN-LAST:event_btnConsultarMascotaActionPerformed

    private void btnModificarMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarMascotaActionPerformed

        // TODO add your handling code here:
        int idCliente = retornaId((String) idClienteMascota.getSelectedItem());
        String codigo = codigoMascota.getText();
        String nombre = nombreMascota.getText();
        String edad = edadMascota.getText();
        String peso = pesoMascota.getText();
        String especie = (String) especieMascota.getSelectedItem();
        Mascota m = new Mascota(idCliente, codigo, nombre, edad, peso, especie);
        try {
            boolean respuesta = CtMascota.actualizarMascota(m);
            if (respuesta) {
                JOptionPane.showMessageDialog(this, "Registro actualizado correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Registro no actualizado");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Debe buscar el registro para actualizar");
        }
        limpiarCampos(3);
    }//GEN-LAST:event_btnModificarMascotaActionPerformed

    private void btnBorrarMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarMascotaActionPerformed
        String codigo = codigoMascota.getText();
        Mascota m = new Mascota(0, codigo, "", "", "", "");
        try {
            boolean respuesta = CtMascota.borrarMascota(m);
            if (respuesta) {
                JOptionPane.showMessageDialog(this, "Registro borrado correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Registro no borrado");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No se pudo borrar");
        }
        limpiarCampos(3);

    }//GEN-LAST:event_btnBorrarMascotaActionPerformed

    private void btnLimpiarCliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCliente1ActionPerformed
        limpiarCampos(3);
    }//GEN-LAST:event_btnLimpiarCliente1ActionPerformed

    private void nombrePlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombrePlanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombrePlanActionPerformed

    private void pestañaMascotaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_pestañaMascotaInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_pestañaMascotaInputMethodTextChanged

    private void pestañaMascotaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pestañaMascotaFocusGained

    }//GEN-LAST:event_pestañaMascotaFocusGained

    private void pestañaMascotaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pestañaMascotaFocusLost

    }//GEN-LAST:event_pestañaMascotaFocusLost

    private void pestañaMascotaHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_pestañaMascotaHierarchyChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_pestañaMascotaHierarchyChanged

    private void idClienteMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idClienteMascotaActionPerformed

    }//GEN-LAST:event_idClienteMascotaActionPerformed

    private void crearPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearPagoActionPerformed
        // TODO add your handling code here:
        
        int idCliente = retornaId((String) idClienteMascota.getSelectedItem());
        
        String codigo = codigoPago.getText();
        String fecha = fechaPago.getText();
        String nCuotas = nCuotasPago.getText();
        int idMascota = retornaId((String) mascotaInfo.getSelectedItem());
        int idPlan = retornaId((String) planInfo.getSelectedItem());

        Pago p = new Pago(codigo, fecha, nCuotas, idMascota, idPlan);

        if (this.CtPago.crearPago(p)) {
            JOptionPane.showMessageDialog(this, "El pago fue agregado con exito en la base de datos");
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo agregar el registro a la base de datos");
        }
        limpiarCampos(4);                
        
        
    }//GEN-LAST:event_crearPagoActionPerformed

    private void consultarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarPagoActionPerformed
        
        
        String codigo = codigoPago.getText();
        Pago p = CtPago.buscarPago(codigo);
        if (p == null) {
            JOptionPane.showMessageDialog(this, "El código del pago no fue encontrado");
            limpiarCampos(4);
        } else {
            int sizeMascota = mascotaInfo.getItemCount();
            for (int i = 0; i < sizeMascota; i++) {
                String item = mascotaInfo.getItemAt(i);
                int id = retornaId((String) item);
                if (id == p.getIdMascota()) {
                    mascotaInfo.setSelectedIndex(i);
                }
            }
            
            int sizePlan = planInfo.getItemCount();
            for (int i = 0; i < sizePlan; i++) {
                String item = planInfo.getItemAt(i);
                int id = retornaId((String) item);
                if (id == p.getIdPlan()) {
                    planInfo.setSelectedIndex(i);
                }
            }
           
            fechaPago.setText(String.valueOf(p.getFecha()));
            nCuotasPago.setText(String.valueOf(p.getnCuotas()));
        }
        
    }//GEN-LAST:event_consultarPagoActionPerformed

    private void modificarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarPagoActionPerformed
        
        String codigo = codigoPago.getText();
        String fecha = fechaPago.getText();
        String nCuotas = nCuotasPago.getText();
        int idMascota = retornaId((String) mascotaInfo.getSelectedItem());
        int idPlan = retornaId((String) planInfo.getSelectedItem());
        
       Pago p = new Pago(codigo, fecha, nCuotas, idMascota, idPlan);
       
        try {
            boolean respuesta = CtPago.actualizarPago(p);
            if (respuesta) {
                JOptionPane.showMessageDialog(this, "Registro actualizado correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Registro no actualizado");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Debe buscar el registro para actualizar");
        }
        limpiarCampos(4);
        
    }//GEN-LAST:event_modificarPagoActionPerformed

    private void BorrarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarPagoActionPerformed
        
        String codigo = codigoPago.getText();
        Pago p = new Pago(codigo, "", "", 0, 0);
        try {
            boolean respuesta = CtPago.borrarPago(p);
            if (respuesta) {
                JOptionPane.showMessageDialog(this, "Registro borrado correctamente");
            } else {
                JOptionPane.showMessageDialog(this, "Registro no borrado");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No se pudo borrar");
        }
        limpiarCampos(4);

        
        
    }//GEN-LAST:event_BorrarPagoActionPerformed

    private void LimpiarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarPagoActionPerformed
        limpiarCampos(4);
    }//GEN-LAST:event_LimpiarPagoActionPerformed

    private void botonListarPlanesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListarPlanesActionPerformed
        
        ListarPlanes newFrame = new ListarPlanes();
        newFrame.setVisible(true);
        newFrame.setDefaultCloseOperation(HIDE_ON_CLOSE);   
    }//GEN-LAST:event_botonListarPlanesActionPerformed

    private void botonListarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListarClientesActionPerformed
        ListarClientes newFrame = new ListarClientes();
        newFrame.setVisible(true);
        newFrame.setDefaultCloseOperation(HIDE_ON_CLOSE);   
    }//GEN-LAST:event_botonListarClientesActionPerformed

    private void botonListarMascotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListarMascotasActionPerformed
         ListarMascotas newFrame = new ListarMascotas();
        newFrame.setVisible(true);
        newFrame.setDefaultCloseOperation(HIDE_ON_CLOSE);   
    }//GEN-LAST:event_botonListarMascotasActionPerformed

    private void botonListarPagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonListarPagosActionPerformed
         ListarPagos newFrame = new ListarPagos();
        newFrame.setVisible(true);
        newFrame.setDefaultCloseOperation(HIDE_ON_CLOSE);   
    }//GEN-LAST:event_botonListarPagosActionPerformed

    private void botonReporteMascotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonReporteMascotasActionPerformed
       ReporteMascotas newFrame = new ReporteMascotas();
        newFrame.setVisible(true);
        newFrame.setDefaultCloseOperation(HIDE_ON_CLOSE);   
    }//GEN-LAST:event_botonReporteMascotasActionPerformed

    private void limpiarCampos(int num) {
        if (num == 1) {
            codigoPlan.setText("");
            precioPlan.setText("");
        } else if (num == 2) {
            identificacionCliente.setText("");
            nombresCliente.setText("");
            apellidosCliente.setText("");
            direccionCliente.setText("");
            telefonoCliente.setText("");
        } else if (num == 3) {
            codigoMascota.setText("");
            nombreMascota.setText("");
            edadMascota.setText("");
            pesoMascota.setText("");
            especieMascota.setSelectedIndex(0);
            idClienteMascota.setSelectedIndex(0);
        } else if (num == 4) {
            codigoPago.setText("");
            fechaPago.setText("");
            nCuotasPago.setText("");
            mascotaInfo.setSelectedIndex(0);
            planInfo.setSelectedIndex(0);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BorrarPago;
    private javax.swing.JButton LimpiarPago;
    private javax.swing.JTextField apellidosCliente;
    private javax.swing.JButton botonListarClientes;
    private javax.swing.JButton botonListarMascotas;
    private javax.swing.JButton botonListarPagos;
    private javax.swing.JButton botonListarPlanes;
    private javax.swing.JButton botonReporteMascotas;
    private javax.swing.JButton btnBorrarCliente;
    private javax.swing.JButton btnBorrarMascota;
    private javax.swing.JButton btnBorrarPlan;
    private javax.swing.JButton btnConsultarCliente;
    private javax.swing.JButton btnConsultarMascota;
    private javax.swing.JButton btnConsultarPlan;
    private javax.swing.JButton btnCrearCliente;
    private javax.swing.JButton btnCrearMascota;
    private javax.swing.JButton btnCrearPlan;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnLimpiarCliente;
    private javax.swing.JButton btnLimpiarCliente1;
    private javax.swing.JButton btnModificarCliente;
    private javax.swing.JButton btnModificarMascota;
    private javax.swing.JButton btnModificarPlan;
    private javax.swing.JTextField codigoMascota;
    private javax.swing.JTextField codigoPago;
    private javax.swing.JTextField codigoPlan;
    private javax.swing.JButton consultarPago;
    private javax.swing.JButton crearPago;
    private javax.swing.JTextField direccionCliente;
    private javax.swing.JTextField edadMascota;
    private javax.swing.JComboBox<String> especieMascota;
    private javax.swing.JTextField fechaPago;
    private javax.swing.JComboBox<String> idClienteMascota;
    private javax.swing.JTextField identificacionCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JComboBox<String> mascotaInfo;
    private javax.swing.JButton modificarPago;
    private javax.swing.JTextField nCuotasPago;
    private javax.swing.JTextField nombreMascota;
    private javax.swing.JComboBox<String> nombrePlan;
    private javax.swing.JTextField nombresCliente;
    private javax.swing.JTextField pesoMascota;
    private javax.swing.JTabbedPane pestañaMascota;
    private javax.swing.JComboBox<String> planInfo;
    private javax.swing.JTextField precioPlan;
    private javax.swing.JTextField telefonoCliente;
    // End of variables declaration//GEN-END:variables
}
